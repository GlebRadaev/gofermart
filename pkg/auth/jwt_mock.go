// Code generated by MockGen. DO NOT EDIT.
// Source: /var/yandex-project/gofermart/pkg/auth/jwt.go
//
// Generated by this command:
//
//	mockgen -source=/var/yandex-project/gofermart/pkg/auth/jwt.go -destination=/var/yandex-project/gofermart/pkg/auth/jwt_mock.go -package=auth
//

// Package auth is a generated GoMock package.
package auth

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockJWTServiceInterface is a mock of JWTServiceInterface interface.
type MockJWTServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockJWTServiceInterfaceMockRecorder
	isgomock struct{}
}

// MockJWTServiceInterfaceMockRecorder is the mock recorder for MockJWTServiceInterface.
type MockJWTServiceInterfaceMockRecorder struct {
	mock *MockJWTServiceInterface
}

// NewMockJWTServiceInterface creates a new mock instance.
func NewMockJWTServiceInterface(ctrl *gomock.Controller) *MockJWTServiceInterface {
	mock := &MockJWTServiceInterface{ctrl: ctrl}
	mock.recorder = &MockJWTServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTServiceInterface) EXPECT() *MockJWTServiceInterfaceMockRecorder {
	return m.recorder
}

// GenerateJWT mocks base method.
func (m *MockJWTServiceInterface) GenerateJWT(userID int, expirationTime time.Time) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateJWT", userID, expirationTime)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateJWT indicates an expected call of GenerateJWT.
func (mr *MockJWTServiceInterfaceMockRecorder) GenerateJWT(userID, expirationTime any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateJWT", reflect.TypeOf((*MockJWTServiceInterface)(nil).GenerateJWT), userID, expirationTime)
}

// ValidateToken mocks base method.
func (m *MockJWTServiceInterface) ValidateToken(tokenString string) (*Claims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", tokenString)
	ret0, _ := ret[0].(*Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockJWTServiceInterfaceMockRecorder) ValidateToken(tokenString any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockJWTServiceInterface)(nil).ValidateToken), tokenString)
}
